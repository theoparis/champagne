const native_endian = @import("builtin").cpu.arch.endian();

const symbols = .{
    .@"ntdll.dll" = .{
        .hooks = .{
            .EtwEventRegister = ntdll.EtwEventRegister,
            .EtwRegisterTraceGuidsW = ntdll.EtwRegisterTraceGuidsW,
            .NtAllocateVirtualMemory = ntdll.NtAllocateVirtualMemory,
            .NtAlpcCreatePort = ntdll.NtAlpcCreatePort,
            .NtClose = ntdll.NtClose,
            .NtCreateDirectoryObject = ntdll.NtCreateDirectoryObject,
            .NtCreateEvent = ntdll.NtCreateEvent,
            .NtCreateFile = ntdll.NtCreateFile,
            .NtCreateKey = ntdll.NtCreateKey,
            .NtCreateMutant = ntdll.NtCreateMutant,
            .NtCreateSection = ntdll.NtCreateSection,
            .NtDeleteValueKey = ntdll.NtDeleteValueKey,
            .NtDuplicateObject = ntdll.NtDuplicateObject,
            .NtMapViewOfSection = ntdll.NtMapViewOfSection,
            .NtOpenDirectoryObject = ntdll.NtOpenDirectoryObject,
            .NtOpenEvent = ntdll.NtOpenEvent,
            .NtOpenFile = ntdll.NtOpenFile,
            .NtOpenKey = ntdll.NtOpenKey,
            .NtOpenSymbolicLinkObject = ntdll.NtOpenSymbolicLinkObject,
            .NtQueryDirectoryObject = ntdll.NtQueryDirectoryObject,
            .NtQueryInformationJobObject = ntdll.NtQueryInformationJobObject,
            .NtQuerySymbolicLinkObject = ntdll.NtQuerySymbolicLinkObject,
            .NtQuerySystemInformation = ntdll.NtQuerySystemInformation,
            .NtQueryValueKey = ntdll.NtQueryValueKey,
            .NtRaiseHardError = ntdll.NtRaiseHardError,
            .NtSetInformationProcess = ntdll.NtSetInformationProcess,
            .NtSetValueKey = ntdll.NtSetValueKey,
            .NtTerminateProcess = ntdll.NtTerminateProcess,
            .NtUnmapViewOfSection = ntdll.NtUnmapViewOfSection,
            .RtlAcquireSRWLockExclusive = ntdll.RtlAcquireSRWLockExclusive,
            .RtlAcquireSRWLockShared = ntdll.RtlAcquireSRWLockShared,
            .RtlAdjustPrivilege = ntdll.RtlAdjustPrivilege,
            .RtlAllocateHeap = ntdll.RtlAllocateHeap,
            .RtlCreateEnvironment = ntdll.RtlCreateEnvironment,
            .RtlCreateTagHeap = ntdll.RtlCreateTagHeap,
            .RtlFreeHeap = ntdll.RtlFreeHeap,
            .RtlGetNtSystemRoot = ntdll.RtlGetNtSystemRoot,
            .RtlInitializeConditionVariable = ntdll.RtlInitializeConditionVariable,
            .RtlWakeAllConditionVariable = ntdll.RtlWakeAllConditionVariable,
            .RtlInitializeSRWLock = ntdll.RtlInitializeSRWLock,
            .RtlInitUnicodeString = ntdll.RtlInitUnicodeString,
            .RtlInitUnicodeStringEx = ntdll.RtlInitUnicodeStringEx,
            .RtlNormalizeProcessParams = ntdll.RtlNormalizeProcessParams,
            .RtlReleaseSRWLockExclusive = ntdll.RtlReleaseSRWLockExclusive,
            .RtlReleaseSRWLockShared = ntdll.RtlReleaseSRWLockShared,
            .RtlSetHeapInformation = ntdll.RtlSetHeapInformation,
            .RtlSetThreadIsCritical = ntdll.RtlSetThreadIsCritical,
            .RtlSleepConditionVariableSRW = ntdll.RtlSleepConditionVariableSRW,
            .TpAllocPool = ntdll.TpAllocPool,
            .TpAllocWork = ntdll.TpAllocWork,
            .TpPostWork = ntdll.TpPostWork,
            .TpReleaseWork = ntdll.TpReleaseWork,
            .TpSetPoolMinThreads = ntdll.TpSetPoolMinThreads,
            .TpWaitForWork = ntdll.TpWaitForWork,
        },

        .real = .{
            // Math, strings and memory
            .NlsAnsiCodePage,
            .NlsMbCodePageTag,
            .NlsMbOemCodePageTag,
            .RtlCharToInteger,
            .RtlAnsiCharToUnicodeChar,
            .RtlAnsiStringToUnicodeSize,
            .RtlAnsiStringToUnicodeString,
            .RtlAppendAsciizToString,
            .RtlAppendPathElement,
            .RtlAppendStringToString,
            .RtlAppendUnicodeStringToString,
            .RtlAppendUnicodeToString,
            .RtlCanonicalizeDomainName,
            .RtlCompareMemory,
            .RtlCompareMemoryUlong,
            .RtlCompareString,
            .RtlCompareUnicodeString,
            .RtlCompareUnicodeStrings,
            .RtlConsoleMultiByteToUnicodeN,
            .RtlCopyLuid,
            .RtlCopyLuidAndAttributesArray,
            .RtlCopyMappedMemory,
            .RtlCopyMemory,
            .RtlCopyMemoryNonTemporal,
            .RtlCopyString,
            .RtlCopyUnicodeString,
            .RtlCreateUnicodeString,
            .RtlCreateUnicodeStringFromAsciiz,
            .RtlCustomCPToUnicodeN,
            .RtlDosPathNameToNtPathName_U,
            .RtlDosPathNameToNtPathName_U_WithStatus,
            .RtlEqualString,
            .RtlEqualUnicodeString,
            .RtlExpandEnvironmentStrings_U,
            .RtlFindCharInUnicodeString,
            .RtlFreeUnicodeString,
            .RtlInitAnsiString,
            .RtlMoveMemory,
            .RtlPrefixString,
            .RtlPrefixUnicodeString,
            .RtlUnicodeStringToInteger,
            .RtlUnicodeStringToAnsiSize,
            .RtlUnicodeStringToAnsiString,
            .RtlUnicodeStringToUTF8String,
            .RtlUpcaseUnicodeChar,
            .RtlUTF8ToUnicodeN,
            .LdrVerifyImageMatchesChecksumEx, // Nt
            .__C_specific_handler,
            .__chkstk,
            .__isascii,
            .__iscsym,
            .__iscsymf,
            .__misaligned_access,
            .__toascii,
            ._atoi64,
            ._errno,
            ._fltused,
            ._i64toa,
            ._i64toa_s,
            ._i64tow,
            ._i64tow_s,
            ._itoa,
            ._itoa_s,
            ._itow,
            ._itow_s,
            ._lfind,
            ._local_unwind,
            ._ltoa,
            ._ltoa_s,
            ._ltow,
            ._ltow_s,
            ._makepath_s,
            ._memccpy,
            ._memicmp,
            ._setjmp,
            ._setjmpex,
            ._snprintf,
            ._snprintf_s,
            ._snscanf_s,
            ._snwprintf,
            ._snwprintf_s,
            ._snwscanf_s,
            ._splitpath,
            ._splitpath_s,
            ._strcmpi,
            ._stricmp,
            ._strlwr,
            ._strlwr_s,
            ._strnicmp,
            ._strnset_s,
            ._strset_s,
            ._strupr,
            ._strupr_s,
            ._swprintf,
            ._ui64toa,
            ._ui64toa_s,
            ._ui64tow,
            ._ui64tow_s,
            ._ultoa,
            ._ultoa_s,
            ._ultow,
            ._ultow_s,
            ._vscprintf,
            ._vscwprintf,
            ._vsnprintf,
            ._vsnprintf_s,
            ._vsnwprintf,
            ._vsnwprintf_s,
            ._vswprintf,
            ._wcsicmp,
            ._wcslwr,
            ._wcslwr_s,
            ._wcsnicmp,
            ._wcsnset_s,
            ._wcsset_s,
            ._wcstoi64,
            ._wcstoui64,
            ._wcsupr,
            ._wcsupr_s,
            ._wmakepath_s,
            ._wsplitpath_s,
            ._wtoi,
            ._wtoi64,
            ._wtol,
            .abs,
            .atan,
            .atan2,
            .atoi,
            .atol,
            .bsearch,
            .bsearch_s,
            .ceil,
            .cos,
            .fabs,
            .floor,
            .isalnum,
            .isalpha,
            .iscntrl,
            .isdigit,
            .isgraph,
            .islower,
            .isprint,
            .ispunct,
            .isspace,
            .isupper,
            .iswalnum,
            .iswalpha,
            .iswascii,
            .iswctype,
            .iswdigit,
            .iswgraph,
            .iswlower,
            .iswprint,
            .iswspace,
            .iswxdigit,
            .isxdigit,
            .labs,
            .log,
            .mbstowcs,
            .memchr,
            .memcmp,
            .memcpy,
            .memcpy_s,
            .memmove,
            .memmove_s,
            .memset,
            .pow,
            .qsort,
            .qsort_s,
            .sin,
            .sprintf,
            .sprintf_s,
            .sqrt,
            .sscanf,
            .sscanf_s,
            .strcat,
            .strcat_s,
            .strchr,
            .strcmp,
            .strcpy,
            .strcpy_s,
            .strcspn,
            .strlen,
            .strncat,
            .strncat_s,
            .strncmp,
            .strncpy,
            .strncpy_s,
            .strnlen,
            .strpbrk,
            .strrchr,
            .strspn,
            .strstr,
            .strtok_s,
            .strtol,
            .strtoul,
            .swprintf,
            .swprintf_s,
            .swscanf_s,
            .tan,
            .tolower,
            .toupper,
            .towlower,
            .towupper,
            .vsprintf,
            .vsprintf_s,
            .vswprintf_s,
            .wcscat,
            .wcscat_s,
            .wcschr,
            .wcscmp,
            .wcscpy,
            .wcscpy_s,
            .wcscspn,
            .wcslen,
            .wcsncat,
            .wcsncat_s,
            .wcsncmp,
            .wcsncpy,
            .wcsncpy_s,
            .wcsnlen,
            .wcspbrk,
            .wcsrchr,
            .wcsspn,
            .wcsstr,
            .wcstok_s,
            .wcstol,
            .wcstombs,
            .wcstoul,

            // Hashing
            .A_SHAFinal,
            .A_SHAInit,
            .A_SHAUpdate,
            .MD4Final,
            .MD4Init,
            .MD4Update,
            .MD5Final,
            .MD5Init,
            .MD5Update,
            .RtlComputeCrc32,
            .RtlCrc32,
            .RtlCrc64,

            // Prefix tables
            .PfxFindPrefix,
            .PfxInitialize,
            .PfxInsertPrefix,
            .PfxRemovePrefix,

            // Needs more investigating into what lock functions we want to pass through
            // .RtlAcquirePebLock,
            // .RtlAcquirePrivilege, heap and Nt
            // .RtlAcquireReleaseSRWLockExclusive,
            // .RtlAcquireResourceExclusive, Nt
            // .RtlAcquireResourceShared, Nt
            // .RtlConvertExclusiveToShared, (Only NtReleaseSemaphore)
            // .RtlConvertSRWLockExclusiveToShared (Only NtAlertThreadByThreadId)
            // .RtlConvertSharedToExclusive,

            // Heap and other things
            // .RtlActivateActivationContext
            // .RtlActivateActivationContextEx
            // .RtlActivateActivationContextUnsafeFast

            // ACL memes
            .RtlAddAccessAllowedAce,
            .RtlAddAccessAllowedAceEx,
            .RtlAddAccessAllowedObjectAce,
            .RtlAddAccessDeniedAce,
            .RtlAddAccessDeniedAceEx,
            .RtlAddAccessDeniedObjectAce,
            .RtlAddAccessFilterAce,
            .RtlAddAce,
            .RtlAddAuditAccessAce,
            .RtlAddAuditAccessAceEx,
            .RtlAddAuditAccessObjectAce,
            .RtlAddCompoundAce,
            .RtlAddIntegrityLabelToBoundaryDescriptor,
            .RtlAddMandatoryAce,
            .RtlAddProcessTrustLabelAce,
            .RtlAddRefActivationContext,
            .RtlAddResourceAttributeAce,
            .RtlAddSIDToBoundaryDescriptor,
            .RtlAddScopedPolicyIDAce,
            .RtlAllocateAndInitializeSid,
            .RtlConvertSidToUnicodeString,
            .RtlConvertToAutoInheritSecurityObject,
            .RtlCopySecurityDescriptor,
            .RtlCopySid,
            .RtlCopySidAndAttributesArray,
            .RtlCreateAcl,
            .RtlCreateSecurityDescriptor,
            .RtlCreateServiceSid,
            // .RtlCreateUserSecurityObject, AAAAAAA
            .RtlCreateVirtualAccountSid,
            // .RtlDefaultNpAcl, Nt
            .RtlDeleteAce,
            .RtlDeleteBoundaryDescriptor,
            .RtlDeleteSecurityObject,
            .RtlFirstFreeAce,
            .RtlFreeSid,
            .RtlGetAce,
            .RtlIsValidProcessTrustLabelSid,
            .RtlLengthSid,
            .RtlLengthSidAsUnicodeString,
            .RtlSetDaclSecurityDescriptor,
            .RtlSetOwnerSecurityDescriptor,
            .RtlSetSaclSecurityDescriptor,
            .RtlValidAcl,
            .RtlValidRelativeSecurityDescriptor,
            .RtlValidSecurityDescriptor,
            .RtlValidSid,

            // PE (?)
            .RtlAddressInSectionTable,
            // .RtlComputeImportTableHash, Nt
            .RtlComputePrivatizedDllName_U,

            // ?
            .RtlApplicationVerifierStop,
            .RtlAreAllAccessesGranted,
            .RtlAreAnyAccessesGranted,
            // RtlCheckBootStatusIntegrity, fs calls
            .RtlAreLongPathsEnabled,
            // .RtlCheckTokenCapability, fs calls
            // .RtlCheckTokenMembership, fs calls
            // .RtlCheckTokenMembershipEx, fs calls
            // .RtlCleanUpTEBLangLists, heap
            .RtlCmDecodeMemIoResource,
            .RtlCmEncodeMemIoResource,
            // .RtlCommitDebugInfo, heap
            // .RtlCompactHeap, heap
            .RtlCompareAltitudes,
            // .RtlCompleteProcessCloning,
            .RtlCompressBuffer,
            // .RtlConstructCrossVmEventPath, heap
            // .RtlConstructCrossVmMutexPath,
            // .RtlContractHashTable, heap
            .RtlConvertDeviceFamilyInfoToString,
            .RtlConvertLCIDToString,
            .RtlCopyContext,
            .RtlCopyExtendedContext,
            // .RtlCreateActivationContext, heap
            // .RtlCreateAndSetSD, heap
            // .RtlCreateAtomTable, heap
            // .RtlCreateBoundaryDescriptor, heap
            // .RtlCreateEnvironment, heap, critical sections and shit
            // .RtlCreateEnvironmentEx, -||-
            // .RtlCreateMemoryBlockLookaside, ??
            .RtlCreateMemoryZone,
            // .RtlCreateProcessParameters, heap
            // .RtlCreateProcessParametersEx,
            // .RtlCreateProcessParametersWithTemplate,
            // .RtlCreateProcessReflection, Nt
            // .RtlCreateQueryDebugBuffer, Nt
            // .RtlCreateSystemVolumeInformationFolder, Nt and heap
            // .RtlCultureNameToLCID, Registry
            // .RtlCutoverTimeToSystemTime, AAAA
            .RtlDeCommitDebugInfo,
            .RtlDeNormalizeProcessParams,
            // .RtlDecodePointer, NtQueryInformationProcess
            // .RtlDecodeRemotePointer, NtQueryInformationProcess
            .RtlDecodeSystemPointer,
            .RtlDecompressBuffer,
            .RtlDecompressBufferEx,
            .RtlDecompressFragment,
            // .RtlDeleteElementGenericTable, heap
            // .RtlDeleteElementGenericTableAvl, heap
            // .RtlDeleteElementGenericTableAvlEx, heap
            // .RtlDeleteFunctionTable, AAAA
            // .RtlDeleteGrowableFunctionTable, AAAA
            // .RtlDeleteResource, heap and Nt
            // .RtlDeleteUmsCompletionList, heap and Nt
            // .RtlDeleteUmsThreadContext, heap
            // .RtlDequeueUmsCompletionListItems, NtWaitForSingleObject
            // .RtlDeregisterSecureMemoryCacheCallback, heap and lock
            .RtlConnectToSm,
            .RtlSendMsgToSm,

            // Splay trees
            .RtlDelete,
            .RtlDeleteNoSplay,

            // Hash table
            .RtlCreateHashTable,
            .RtlCreateHashTableEx,
            .RtlDeleteHashTable,

            // Registry Nt
            .RtlApplyRXact,
            .RtlApplyRXactNoFlush,
            .RtlCapabilityCheck,
            .RtlCapabilityCheckForSingleSessionSku,
            .RtlCheckPortableOperatingSystem,
            .RtlCheckRegistryKey,
            .RtlCreateBootStatusDataFile,
            .RtlCreateRegistryKey,
            .RtlWriteRegistryValue,
            .RtlAppxIsFileOwnedByTrustedInstaller,
            .RtlQueryRegistryValuesEx,

            // .RtlCheckSandboxedToken, NtQueryInformationToken
            // .RtlCheckSystemBootStatusIntegrity, NtPowerInformation

            // Bitset functions
            .RtlAreBitsClear,
            .RtlAreBitsClearEx,
            .RtlAreBitsSet,
            .RtlClearAllBits,
            .RtlClearAllBitsEx,
            .RtlClearBit,
            .RtlClearBitEx,
            .RtlClearBits,
            .RtlClearBitsEx,
            .RtlCopyBitMap,
            .RtlFindClearBits,
            .RtlFindClearBitsAndSet,
            .RtlFindClearBitsEx,
            .RtlFindSetBits,
            .RtlInitializeBitMap,
            .RtlInitializeBitMapEx,
            .RtlNumberOfClearBits,
            .RtlNumberOfClearBitsEx,
            .RtlNumberOfClearBitsInRange,
            .RtlNumberOfSetBits,
            .RtlNumberOfSetBitsEx,
            .RtlNumberOfSetBitsInRange,
            .RtlSetAllBits,
            .RtlSetAllBitsEx,
            .RtlSetBit,
            .RtlSetBitEx,
            .RtlSetBits,
            .RtlSetBitsEx,
            .RtlTestBit,

            // AVL trees
            .RtlAvlInsertNodeEx,
            .RtlAvlRemoveNode,

            // Needs proper thread memes
            // .RtlBarrier,
            // .RtlBarrierForDelete
            // .RtlCancelTimer
            // .RtlCheckForOrphanedCriticalSections,
            // .RtlClearThreadWorkOnBehalfTicket,
            // .RtlCreateTimer, heap
            // .RtlCreateTimerQueue, heap
            // .RtlCreateUmsCompletionList, heap
            // .RtlCreateUmsThreadContext, heap
            // .RtlDeactivateActivationContext,
            // .RtlDeactivateActivationContextUnsafeFast,
            // .RtlDeleteAtomFromAtomTable, heap
            // .RtlDeleteBarrier,
            // .RtlDeleteCriticalSection,
            // .RtlDeleteTimer,
            // .RtlDeleteTimerQueue,
            // .RtlDeleteTimerQueueEx,
            .RtlRandomEx, // This uses once so may die if contended

            // Stack memes
            .RtlCaptureContext,
            .RtlCaptureContext2,
            .RtlCallEnclaveReturn,
            // .RtlCaptureStackBackTrace, NtQueryVirtualMemory

            // Processes
            .RtlCreateUserProcess,
            .RtlCreateUserProcessEx,
            // .RtlCreateUserFiberShadowStack, // AAAA
            // .RtlCreateUserStack, // AAAA
            // .RtlCreateUserThread,
            .RtlAcquirePrivilege,
            .RtlReleasePrivilege,
            .LdrQueryImageFileExecutionOptions,
            .RtlDestroyProcessParameters,

            // Time
            .RtlSecondsSince1970ToTime,
            .RtlSecondsSince1980ToTime,
            .RtlTimeFieldsToTime,
            .RtlTimeToElapsedTimeFields,
            .RtlTimeToSecondsSince1970,
            .RtlTimeToSecondsSince1980,
            .RtlTimeToTimeFields,

            // Exceptions
            .RtlLookupFunctionEntry,
            .RtlUnhandledExceptionFilter,
            .RtlUnhandledExceptionFilter2,
            .RtlVirtualUnwind,

            // Tracing
            .EtwGetTraceLoggerHandle,
            .EtwGetTraceEnableLevel,
            .EtwGetTraceEnableFlags,

            // ALPC
            .AlpcGetMessageAttribute,
            .AlpcInitializeMessageAttribute,
            .TpAllocAlpcCompletion,
        },

        .kill = .{
            .DbgBreakPoint,
            .DbgPrompt,
            .RtlDeregisterWait,
            .RtlDeregisterWaitEx,
            .RtlDeriveCapabilitySidsFromName,
            .RtlDestroyAtomTable,
            .RtlDestroyEnvironment,
            .RtlDestroyHandleTable,
            .RtlDestroyHeap,
            .RtlDestroyMemoryBlockLookaside,
            .RtlDestroyMemoryZone,
            .RtlDestroyQueryDebugBuffer,
            .RtlDetectHeapLeaks,
            .RtlDetermineDosPathNameType_U,
            .RtlDisableThreadProfiling,
            .RtlDisownModuleHeapAllocation,
            .RtlDllShutdownInProgress,
            .RtlDnsHostNameToComputerName,
            .RtlDoesFileExists_U,
            .RtlDoesNameContainWildCards,
            .RtlDosApplyFileIsolationRedirection_Ustr,
            .RtlDosLongPathNameToNtPathName_U_WithStatus,
            .RtlDosLongPathNameToRelativeNtPathName_U_WithStatus,
            .RtlDosPathNameToNtPathName_U,
            .RtlDosPathNameToNtPathName_U_WithStatus,
            .RtlDosPathNameToRelativeNtPathName_U,
            .RtlDosPathNameToRelativeNtPathName_U_WithStatus,
            .RtlDosSearchPath_U,
            .RtlDosSearchPath_Ustr,
            .RtlDowncaseUnicodeChar,
            .RtlDowncaseUnicodeString,
            .RtlDrainNonVolatileFlush,
            .RtlDumpResource,
            .RtlDuplicateUnicodeString,
            .RtlEmptyAtomTable,
            .RtlEnableEarlyCriticalSectionEventCreation,
            .RtlEnableThreadProfiling,
            .RtlEnclaveCallDispatch,
            .RtlEnclaveCallDispatchReturn,
            .RtlEncodePointer,
            .RtlEncodeRemotePointer,
            .RtlEncodeSystemPointer,
            .RtlEndEnumerationHashTable,
            .RtlEndStrongEnumerationHashTable,
            .RtlEndWeakEnumerationHashTable,
            .RtlEnterCriticalSection,
            .RtlEnterUmsSchedulingMode,
            .RtlEnumProcessHeaps,
            .RtlEnumerateEntryHashTable,
            .RtlEnumerateGenericTable,
            .RtlEnumerateGenericTableAvl,
            .RtlEnumerateGenericTableLikeADirectory,
            .RtlEnumerateGenericTableWithoutSplaying,
            .RtlEnumerateGenericTableWithoutSplayingAvl,
            .RtlEqualComputerName,
            .RtlEqualDomainName,
            .RtlEqualLuid,
            .RtlEqualPrefixSid,
            .RtlEqualSid,
            .RtlEqualWnfChangeStamps,
            .RtlEraseUnicodeString,
            .RtlEthernetAddressToStringA,
            .RtlEthernetAddressToStringW,
            .RtlEthernetStringToAddressA,
            .RtlEthernetStringToAddressW,
            .RtlExecuteUmsThread,
            .RtlExitUserProcess,
            .RtlExitUserThread,
            .RtlExpandEnvironmentStrings,
            .RtlExpandEnvironmentStrings_U,
            .RtlExpandHashTable,
            .RtlExtendCorrelationVector,
            .RtlExtendMemoryBlockLookaside,
            .RtlExtendMemoryZone,
            .RtlExtractBitMap,
            .RtlFillMemory,
            .RtlFillMemoryNonTemporal,
            .RtlFillNonVolatileMemory,
            .RtlFinalReleaseOutOfProcessMemoryStream,
            .RtlFindAceByType,
            .RtlFindActivationContextSectionGuid,
            .RtlFindActivationContextSectionString,
            .RtlFindClearRuns,
            .RtlFindClosestEncodableLength,
            .RtlFindExportedRoutineByName,
            .RtlFindLastBackwardRunClear,
            .RtlFindLeastSignificantBit,
            .RtlFindLongestRunClear,
            .RtlFindMessage,
            .RtlFindMostSignificantBit,
            .RtlFindNextForwardRunClear,
            .RtlFindSetBits,
            .RtlFindSetBitsAndClear,
            .RtlFindSetBitsAndClearEx,
            .RtlFindSetBitsEx,
            .RtlFindUnicodeSubstring,
            .RtlFirstEntrySList,
            .RtlFlsAlloc,
            .RtlFlsFree,
            .RtlFlsGetValue,
            .RtlFlsSetValue,
            .RtlFlushHeaps,
            .RtlFlushNonVolatileMemory,
            .RtlFlushNonVolatileMemoryRanges,
            .RtlFlushSecureMemoryCache,
            .RtlFormatCurrentUserKeyPath,
            .RtlFormatMessage,
            .RtlFormatMessageEx,
            .RtlFreeActivationContextStack,
            .RtlFreeAnsiString,
            .RtlFreeHandle,
            .RtlFreeMemoryBlockLookaside,
            .RtlFreeNonVolatileToken,
            .RtlFreeOemString,
            .RtlFreeThreadActivationContextStack,
            .RtlFreeUTF8String,
            .RtlFreeUserFiberShadowStack,
            .RtlFreeUserStack,
            .RtlGUIDFromString,
            .RtlGenerate8dot3Name,
            .RtlGetActiveActivationContext,
            .RtlGetActiveConsoleId,
            .RtlGetAppContainerNamedObjectPath,
            .RtlGetAppContainerParent,
            .RtlGetAppContainerSidType,
            .RtlGetCallersAddress,
            .RtlGetCompressionWorkSpaceSize,
            .RtlGetConsoleSessionForegroundProcessId,
            .RtlGetControlSecurityDescriptor,
            .RtlGetCriticalSectionRecursionCount,
            .RtlGetCurrentDirectory_U,
            .RtlGetCurrentPeb,
            .RtlGetCurrentProcessorNumber,
            .RtlGetCurrentProcessorNumberEx,
            .RtlGetCurrentServiceSessionId,
            .RtlGetCurrentTransaction,
            .RtlGetCurrentUmsThread,
            .RtlGetDaclSecurityDescriptor,
            .RtlGetDeviceFamilyInfoEnum,
            .RtlGetElementGenericTable,
            .RtlGetElementGenericTableAvl,
            .RtlGetEnabledExtendedFeatures,
            .RtlGetExePath,
            .RtlGetExtendedContextLength,
            .RtlGetExtendedContextLength2,
            .RtlGetExtendedFeaturesMask,
            .RtlGetFileMUIPath,
            .RtlGetFrame,
            .RtlGetFullPathName_U,
            .RtlGetFullPathName_UEx,
            .RtlGetFullPathName_UstrEx,
            .RtlGetFunctionTableListHead,
            .RtlGetGroupSecurityDescriptor,
            .RtlGetIntegerAtom,
            .RtlGetInterruptTimePrecise,
            .RtlGetLastNtStatus,
            .RtlGetLastWin32Error,
            .RtlGetLengthWithoutLastFullDosOrNtPathElement,
            .RtlGetLengthWithoutTrailingPathSeperators,
            .RtlGetLocaleFileMappingAddress,
            .RtlGetLongestNtPathLength,
            .RtlGetMultiTimePrecise,
            .RtlGetNativeSystemInformation,
            .RtlGetNextEntryHashTable,
            .RtlGetNextUmsListItem,
            .RtlGetNonVolatileToken,
            .RtlGetNtGlobalFlags,
            .RtlGetNtProductType,
            .RtlGetNtSystemRoot,
            .RtlGetNtVersionNumbers,
            .RtlGetOwnerSecurityDescriptor,
            .RtlGetParentLocaleName,
            .RtlGetPersistedStateLocation,
            .RtlGetProcessHeaps,
            .RtlGetProcessPreferredUILanguages,
            .RtlGetProductInfo,
            .RtlGetReturnAddressHijackTarget,
            .RtlGetSaclSecurityDescriptor,
            .RtlGetSearchPath,
            .RtlGetSecurityDescriptorRMControl,
            .RtlGetSessionProperties,
            .RtlGetSetBootStatusData,
            .RtlGetSuiteMask,
            .RtlGetSystemBootStatus,
            .RtlGetSystemBootStatusEx,
            .RtlGetSystemPreferredUILanguages,
            .RtlGetSystemTimeAndBias,
            .RtlGetSystemTimePrecise,
            .RtlGetThreadErrorMode,
            .RtlGetThreadLangIdByIndex,
            .RtlGetThreadPreferredUILanguages,
            .RtlGetThreadWorkOnBehalfTicket,
            .RtlGetTokenNamedObjectPath,
            .RtlGetUILanguageInfo,
            .RtlGetUmsCompletionListEvent,
            .RtlGetUnloadEventTrace,
            .RtlGetUnloadEventTraceEx,
            .RtlGetUserInfoHeap,
            .RtlGetUserPreferredUILanguages,
            .RtlGetVersion,
            .RtlGrowFunctionTable,
            .RtlGuardCheckLongJumpTarget,
            .RtlHashUnicodeString,
            .RtlHeapTrkInitialize,
            .RtlIdentifierAuthoritySid,
            .RtlIdnToAscii,
            .RtlIdnToNameprepUnicode,
            .RtlIdnToUnicode,
            .RtlImageDirectoryEntryToData,
            .RtlImageNtHeader,
            .RtlImageNtHeaderEx,
            .RtlImageRvaToSection,
            .RtlImageRvaToVa,
            .RtlImpersonateSelf,
            .RtlImpersonateSelfEx,
            .RtlIncrementCorrelationVector,
            .RtlInitAnsiStringEx,
            .RtlInitBarrier,
            .RtlInitCodePageTable,
            .RtlInitEnumerationHashTable,
            .RtlInitMemoryStream,
            .RtlInitNlsTables,
            .RtlInitOutOfProcessMemoryStream,
            .RtlInitString,
            .RtlInitStringEx,
            .RtlInitStrongEnumerationHashTable,
            .RtlInitUTF8String,
            .RtlInitUTF8StringEx,
            .RtlInitUnicodeString,
            .RtlInitUnicodeStringEx,
            .RtlInitWeakEnumerationHashTable,
            .RtlInitializeAtomPackage,
            .RtlInitializeConditionVariable,
            .RtlInitializeContext,
            .RtlInitializeCorrelationVector,
            .RtlInitializeCriticalSection,
            .RtlInitializeCriticalSectionAndSpinCount,
            .RtlInitializeCriticalSectionEx,
            .RtlInitializeExtendedContext,
            .RtlInitializeExtendedContext2,
            .RtlInitializeGenericTable,
            .RtlInitializeGenericTableAvl,
            .RtlInitializeHandleTable,
            .RtlInitializeNtUserPfn,
            .RtlInitializeRXact,
            .RtlInitializeResource,
            .RtlInitializeSListHead,
            .RtlInitializeSid,
            .RtlInitializeSidEx,
            .RtlInsertElementGenericTable,
            .RtlInsertElementGenericTableAvl,
            .RtlInsertElementGenericTableFull,
            .RtlInsertElementGenericTableFullAvl,
            .RtlInsertEntryHashTable,
            .RtlInstallFunctionTableCallback,
            .RtlInt64ToUnicodeString,
            .RtlIntegerToChar,
            .RtlIntegerToUnicodeString,
            .RtlInterlockedClearBitRun,
            .RtlInterlockedFlushSList,
            .RtlInterlockedPopEntrySList,
            .RtlInterlockedPushEntrySList,
            .RtlInterlockedPushListSList,
            .RtlInterlockedPushListSListEx,
            .RtlInterlockedSetBitRun,
            .RtlIoDecodeMemIoResource,
            .RtlIoEncodeMemIoResource,
            .RtlIpv4AddressToStringA,
            .RtlIpv4AddressToStringExA,
            .RtlIpv4AddressToStringExW,
            .RtlIpv4AddressToStringW,
            .RtlIpv4StringToAddressA,
            .RtlIpv4StringToAddressExA,
            .RtlIpv4StringToAddressExW,
            .RtlIpv4StringToAddressW,
            .RtlIpv6AddressToStringA,
            .RtlIpv6AddressToStringExA,
            .RtlIpv6AddressToStringExW,
            .RtlIpv6AddressToStringW,
            .RtlIpv6StringToAddressA,
            .RtlIpv6StringToAddressExA,
            .RtlIpv6StringToAddressExW,
            .RtlIpv6StringToAddressW,
            .RtlIsActivationContextActive,
            .RtlIsCapabilitySid,
            .RtlIsCloudFilesPlaceholder,
            .RtlIsCriticalSectionLocked,
            .RtlIsCriticalSectionLockedByThread,
            .RtlIsCurrentProcess,
            .RtlIsCurrentThread,
            .RtlIsCurrentThreadAttachExempt,
            .RtlIsDosDeviceName_U,
            .RtlIsElevatedRid,
            .RtlIsGenericTableEmpty,
            .RtlIsGenericTableEmptyAvl,
            .RtlIsMultiSessionSku,
            .RtlIsMultiUsersInSessionSku,
            .RtlIsNameInExpression,
            .RtlIsNameInUnUpcasedExpression,
            .RtlIsNameLegalDOS8Dot3,
            .RtlIsNonEmptyDirectoryReparsePointAllowed,
            .RtlIsNormalizedString,
            .RtlIsPackageSid,
            .RtlIsParentOfChildAppContainer,
            .RtlIsPartialPlaceholder,
            .RtlIsPartialPlaceholderFileHandle,
            .RtlIsPartialPlaceholderFileInfo,
            .RtlIsProcessorFeaturePresent,
            .RtlIsStateSeparationEnabled,
            .RtlIsTextUnicode,
            .RtlIsThreadWithinLoaderCallout,
            .RtlIsUntrustedObject,
            .RtlIsValidHandle,
            .RtlIsValidIndexHandle,
            .RtlIsValidLocaleName,
            .RtlIsZeroMemory,
            .RtlKnownExceptionFilter,
            .RtlLCIDToCultureName,
            .RtlLargeIntegerToChar,
            .RtlLcidToLocaleName,
            .RtlLeaveCriticalSection,
            .RtlLengthRequiredSid,
            .RtlLengthSecurityDescriptor,
            .RtlLoadString,
            .RtlLocalTimeToSystemTime,
            .RtlLocaleNameToLcid,
            .RtlLocateExtendedFeature,
            .RtlLocateExtendedFeature2,
            .RtlLocateLegacyContext,
            .RtlLockBootStatusData,
            .RtlLockCurrentThread,
            .RtlLockHeap,
            .RtlLockMemoryBlockLookaside,
            .RtlLockMemoryStreamRegion,
            .RtlLockMemoryZone,
            .RtlLockModuleSection,
            .RtlLogStackBackTrace,
            .RtlLookupAtomInAtomTable,
            .RtlLookupElementGenericTable,
            .RtlLookupElementGenericTableAvl,
            .RtlLookupElementGenericTableFull,
            .RtlLookupElementGenericTableFullAvl,
            .RtlLookupEntryHashTable,
            .RtlLookupFirstMatchingElementGenericTableAvl,
            .RtlLookupFunctionEntry,
            .RtlLookupFunctionTable,
            .RtlMakeSelfRelativeSD,
            .RtlMapGenericMask,
            .RtlMapSecurityErrorToNtStatus,
            .RtlMultiAppendUnicodeStringBuffer,
            .RtlMultiByteToUnicodeN,
            .RtlMultiByteToUnicodeSize,
            .RtlMultipleAllocateHeap,
            .RtlMultipleFreeHeap,
            .RtlNewInstanceSecurityObject,
            .RtlNewSecurityGrantedAccess,
            .RtlNewSecurityObject,
            .RtlNewSecurityObjectEx,
            .RtlNewSecurityObjectWithMultipleInheritance,
            .RtlNormalizeSecurityDescriptor,
            .RtlNormalizeString,
            .RtlNotifyFeatureUsage,
            .RtlNtPathNameToDosPathName,
            .RtlNtStatusToDosError,
            .RtlNtStatusToDosErrorNoTeb,
            .RtlNtdllName,
            .RtlNumberGenericTableElements,
            .RtlNumberGenericTableElementsAvl,
            .RtlNumberOfSetBitsUlongPtr,
            .RtlOemStringToUnicodeSize,
            .RtlOemStringToUnicodeString,
            .RtlOemToUnicodeN,
            .RtlOpenCurrentUser,
            .RtlOsDeploymentState,
            .RtlOwnerAcesPresent,
            .RtlPcToFileHeader,
            .RtlPinAtomInAtomTable,
            .RtlPopFrame,
            .RtlPrepareForProcessCloning,
            .RtlProcessFlsData,
            .RtlProtectHeap,
            .RtlPublishWnfStateData,
            .RtlPushFrame,
            .RtlQueryActivationContextApplicationSettings,
            .RtlQueryAllFeatureConfigurations,
            .RtlQueryAtomInAtomTable,
            .RtlQueryCriticalSectionOwner,
            .RtlQueryDepthSList,
            .RtlQueryDynamicTimeZoneInformation,
            .RtlQueryElevationFlags,
            .RtlQueryEnvironmentVariable,
            .RtlQueryEnvironmentVariable_U,
            .RtlQueryFeatureConfiguration,
            .RtlQueryFeatureConfigurationChangeStamp,
            .RtlQueryFeatureUsageNotificationSubscriptions,
            .RtlQueryHeapInformation,
            .RtlQueryImageMitigationPolicy,
            .RtlQueryInformationAcl,
            .RtlQueryInformationActivationContext,
            .RtlQueryInformationActiveActivationContext,
            .RtlQueryInterfaceMemoryStream,
            .RtlQueryModuleInformation,
            .RtlQueryPackageClaims,
            .RtlQueryPackageIdentity,
            .RtlQueryPackageIdentityEx,
            .RtlQueryPerformanceCounter,
            .RtlQueryPerformanceFrequency,
            .RtlQueryProcessBackTraceInformation,
            .RtlQueryProcessDebugInformation,
            .RtlQueryProcessHeapInformation,
            .RtlQueryProcessLockInformation,
            .RtlQueryProcessPlaceholderCompatibilityMode,
            .RtlQueryProtectedPolicy,
            .RtlQueryRegistryValueWithFallback,
            .RtlQueryRegistryValues,
            .RtlQueryRegistryValuesEx,
            .RtlQueryResourcePolicy,
            .RtlQuerySecurityObject,
            .RtlQueryTagHeap,
            .RtlQueryThreadPlaceholderCompatibilityMode,
            .RtlQueryThreadProfiling,
            .RtlQueryTimeZoneInformation,
            .RtlQueryTokenHostIdAsUlong64,
            .RtlQueryUmsThreadInformation,
            .RtlQueryUnbiasedInterruptTime,
            .RtlQueryValidationRunlevel,
            .RtlQueryWnfMetaNotification,
            .RtlQueryWnfStateData,
            .RtlQueryWnfStateDataWithExplicitScope,
            .RtlQueueApcWow64Thread,
            .RtlQueueWorkItem,
            .RtlRaiseCustomSystemEventTrigger,
            .RtlRaiseException,
            .RtlRaiseExceptionForReturnAddressHijack,
            .RtlRaiseNoncontinuableException,
            .RtlRaiseStatus,
            .RtlRandom,
            .RtlRbInsertNodeEx,
            .RtlRbRemoveNode,
            .RtlReAllocateHeap,
            .RtlReadMemoryStream,
            .RtlReadOutOfProcessMemoryStream,
            .RtlReadThreadProfilingData,
            .RtlRealPredecessor,
            .RtlRealSuccessor,
            .RtlRegisterFeatureConfigurationChangeNotification,
            .RtlRegisterForWnfMetaNotification,
            .RtlRegisterSecureMemoryCacheCallback,
            .RtlRegisterThreadWithCsrss,
            .RtlRegisterWait,
            .RtlReleaseActivationContext,
            .RtlReleaseMemoryStream,
            .RtlReleasePath,
            .RtlReleasePebLock,
            .RtlReleasePrivilege,
            .RtlReleaseRelativeName,
            .RtlReleaseResource,
            .RtlReleaseSRWLockExclusive,
            .RtlRemoteCall,
            .RtlRemoveEntryHashTable,
            .RtlRemovePrivileges,
            .RtlRemoveVectoredContinueHandler,
            .RtlRemoveVectoredExceptionHandler,
            .RtlReplaceSidInSd,
            .RtlReplaceSystemDirectoryInPath,
            .RtlReportException,
            .RtlReportExceptionEx,
            .RtlReportSilentProcessExit,
            .RtlReportSqmEscalation,
            .RtlResetMemoryBlockLookaside,
            .RtlResetMemoryZone,
            .RtlResetNtUserPfn,
            .RtlResetRtlTranslations,
            .RtlRestoreBootStatusDefaults,
            .RtlRestoreContext,
            .RtlRestoreLastWin32Error,
            .RtlRestoreSystemBootStatusDefaults,
            .RtlRestoreThreadPreferredUILanguages,
            .RtlRetrieveNtUserPfn,
            .RtlRevertMemoryStream,
            .RtlRunDecodeUnicodeString,
            .RtlRunEncodeUnicodeString,
            .RtlRunOnceBeginInitialize,
            .RtlRunOnceComplete,
            .RtlRunOnceExecuteOnce,
            .RtlRunOnceInitialize,
            .RtlSeekMemoryStream,
            .RtlSelfRelativeToAbsoluteSD,
            .RtlSelfRelativeToAbsoluteSD2,
            .RtlSetAttributesSecurityDescriptor,
            .RtlSetControlSecurityDescriptor,
            .RtlSetCriticalSectionSpinCount,
            .RtlSetCurrentDirectory_U,
            .RtlSetCurrentTransaction,
            .RtlSetDynamicTimeZoneInformation,
            .RtlSetEnvironmentStrings,
            .RtlSetEnvironmentVar,
            .RtlSetEnvironmentVariable,
            .RtlSetExtendedFeaturesMask,
            .RtlSetFeatureConfigurations,
            .RtlSetGroupSecurityDescriptor,
            .RtlSetHeapInformation,
            .RtlSetImageMitigationPolicy,
            .RtlSetInformationAcl,
            .RtlSetIoCompletionCallback,
            .RtlSetLastWin32Error,
            .RtlSetLastWin32ErrorAndNtStatusFromNtStatus,
            .RtlSetMemoryStreamSize,
            .RtlSetPortableOperatingSystem,
            .RtlSetProcessDebugInformation,
            .RtlSetProcessIsCritical,
            .RtlSetProcessPlaceholderCompatibilityMode,
            .RtlSetProcessPreferredUILanguages,
            .RtlSetProtectedPolicy,
            .RtlSetProxiedProcessId,
            .RtlSetSearchPathMode,
            .RtlSetSecurityDescriptorRMControl,
            .RtlSetSecurityObject,
            .RtlSetSecurityObjectEx,
            .RtlSetSystemBootStatus,
            .RtlSetSystemBootStatusEx,
            .RtlSetThreadErrorMode,
            .RtlSetThreadIsCritical,
            .RtlSetThreadPlaceholderCompatibilityMode,
            .RtlSetThreadPoolStartFunc,
            .RtlSetThreadPreferredUILanguages,
            .RtlSetThreadPreferredUILanguages2,
            .RtlSetThreadSubProcessTag,
            .RtlSetThreadWorkOnBehalfTicket,
            .RtlSetTimeZoneInformation,
            .RtlSetTimer,
            .RtlSetUmsThreadInformation,
            .RtlSetUnhandledExceptionFilter,
            .RtlSetUserFlagsHeap,
            .RtlSetUserValueHeap,
            .RtlSidDominates,
            .RtlSidDominatesForTrust,
            .RtlSidEqualLevel,
            .RtlSidHashInitialize,
            .RtlSidHashLookup,
            .RtlSidIsHigherLevel,
            .RtlSizeHeap,
            .RtlSleepConditionVariableCS,
            .RtlSleepConditionVariableSRW,
            .RtlSplay,
            .RtlStartRXact,
            .RtlStatMemoryStream,
            .RtlStringFromGUID,
            .RtlStringFromGUIDEx,
            .RtlStronglyEnumerateEntryHashTable,
            .RtlSubAuthorityCountSid,
            .RtlSubAuthoritySid,
            .RtlSubscribeForFeatureUsageNotification,
            .RtlSubscribeWnfStateChangeNotification,
            .RtlSubtreePredecessor,
            .RtlSubtreeSuccessor,
            .RtlSwitchedVVI,
            .RtlSystemTimeToLocalTime,
            .RtlTestAndPublishWnfStateData,
            .RtlTestBit,
            .RtlTestBitEx,
            .RtlTestProtectedAccess,
            .RtlTraceDatabaseAdd,
            .RtlTraceDatabaseCreate,
            .RtlTraceDatabaseDestroy,
            .RtlTraceDatabaseEnumerate,
            .RtlTraceDatabaseFind,
            .RtlTraceDatabaseLock,
            .RtlTraceDatabaseUnlock,
            .RtlTraceDatabaseValidate,
            .RtlTryAcquirePebLock,
            .RtlTryAcquireSRWLockExclusive,
            .RtlTryAcquireSRWLockShared,
            .RtlTryConvertSRWLockSharedToExclusiveOrRelease,
            .RtlTryEnterCriticalSection,
            .RtlUTF8StringToUnicodeString,
            .RtlUdiv128,
            .RtlUmsThreadYield,
            .RtlUnicodeStringToCountedOemString,
            .RtlUnicodeStringToOemSize,
            .RtlUnicodeStringToOemString,
            .RtlUnicodeToCustomCPN,
            .RtlUnicodeToMultiByteN,
            .RtlUnicodeToMultiByteSize,
            .RtlUnicodeToOemN,
            .RtlUnicodeToUTF8N,
            .RtlUniform,
            .RtlUnlockBootStatusData,
            .RtlUnlockCurrentThread,
            .RtlUnlockHeap,
            .RtlUnlockMemoryBlockLookaside,
            .RtlUnlockMemoryStreamRegion,
            .RtlUnlockMemoryZone,
            .RtlUnlockModuleSection,
            .RtlUnregisterFeatureConfigurationChangeNotification,
            .RtlUnsubscribeFromFeatureUsageNotifications,
            .RtlUnsubscribeWnfNotificationWaitForCompletion,
            .RtlUnsubscribeWnfNotificationWithCompletionCallback,
            .RtlUnsubscribeWnfStateChangeNotification,
            .RtlUnwind,
            .RtlUnwindEx,
            .RtlUpcaseUnicodeString,
            .RtlUpcaseUnicodeStringToAnsiString,
            .RtlUpcaseUnicodeStringToCountedOemString,
            .RtlUpcaseUnicodeStringToOemString,
            .RtlUpcaseUnicodeToCustomCPN,
            .RtlUpcaseUnicodeToMultiByteN,
            .RtlUpcaseUnicodeToOemN,
            .RtlUpdateClonedCriticalSection,
            .RtlUpdateClonedSRWLock,
            .RtlUpdateTimer,
            .RtlUpperChar,
            .RtlUpperString,
            .RtlUserFiberStart,
            .RtlUserThreadStart,
            .RtlValidProcessProtection,
            .RtlValidateCorrelationVector,
            .RtlValidateHeap,
            .RtlValidateProcessHeaps,
            .RtlValidateUnicodeString,
            .RtlVerifyVersionInfo,
            .RtlVirtualUnwind,
            .RtlWaitForWnfMetaNotification,
            .RtlWaitOnAddress,
            .RtlWakeAddressAll,
            .RtlWakeAddressAllNoFence,
            .RtlWakeAddressSingle,
            .RtlWakeAddressSingleNoFence,
            .RtlWakeConditionVariable,
            .RtlWalkFrameChain,
            .RtlWalkHeap,
            .RtlWeaklyEnumerateEntryHashTable,
            .RtlWerpReportException,
            .RtlWnfCompareChangeStamp,
            .RtlWnfDllUnloadCallback,
            .RtlWow64CallFunction64,
            .RtlWow64EnableFsRedirection,
            .RtlWow64EnableFsRedirectionEx,
            .RtlWow64GetCpuAreaInfo,
            .RtlWow64GetCurrentCpuArea,
            .RtlWow64GetCurrentMachine,
            .RtlWow64GetEquivalentMachineCHPE,
            .RtlWow64GetProcessMachines,
            .RtlWow64GetSharedInfoProcess,
            .RtlWow64GetThreadContext,
            .RtlWow64GetThreadSelectorEntry,
            .RtlWow64IsWowGuestMachineSupported,
            .RtlWow64LogMessageInEventLogger,
            .RtlWow64PopAllCrossProcessWorkFromWorkList,
            .RtlWow64PopCrossProcessWorkFromFreeList,
            .RtlWow64PushCrossProcessWorkOntoFreeList,
            .RtlWow64PushCrossProcessWorkOntoWorkList,
            .RtlWow64RequestCrossProcessHeavyFlush,
            .RtlWow64SetThreadContext,
            .RtlWow64SuspendProcess,
            .RtlWow64SuspendThread,
            .RtlWriteMemoryStream,
            .RtlWriteNonVolatileMemory,
            .RtlZeroHeap,
            .RtlZeroMemory,
            .RtlZombifyActivationContext,
            .RtlpApplyLengthFunction,
            .RtlpCheckDynamicTimeZoneInformation,
            .RtlpCleanupRegistryKeys,
            .RtlpConvertAbsoluteToRelativeSecurityAttribute,
            .RtlpConvertCultureNamesToLCIDs,
            .RtlpConvertLCIDsToCultureNames,
            .RtlpConvertRelativeToAbsoluteSecurityAttribute,
            .RtlpCreateProcessRegistryInfo,
            .RtlpEnsureBufferSize,
            .RtlpExecuteUmsThread,
            .RtlpFreezeTimeBias,
            .RtlpGetDeviceFamilyInfoEnum,
            .RtlpGetLCIDFromLangInfoNode,
            .RtlpGetNameFromLangInfoNode,
            .RtlpGetSystemDefaultUILanguage,
            .RtlpGetUserOrMachineUILanguage4NLS,
            .RtlpInitializeLangRegistryInfo,
            .RtlpIsQualifiedLanguage,
            .RtlpLoadMachineUIByPolicy,
            .RtlpLoadUserUIByPolicy,
            .RtlpMergeSecurityAttributeInformation,
            .RtlpMuiFreeLangRegistryInfo,
            .RtlpMuiRegCreateRegistryInfo,
            .RtlpMuiRegFreeRegistryInfo,
            .RtlpMuiRegLoadRegistryInfo,
            .RtlpNotOwnerCriticalSection,
            .RtlpNtCreateKey,
            .RtlpNtEnumerateSubKey,
            .RtlpNtMakeTemporaryKey,
            .RtlpNtOpenKey,
            .RtlpNtQueryValueKey,
            .RtlpNtSetValueKey,
            .RtlpQueryDefaultUILanguage,
            .RtlpQueryProcessDebugInformationFromWow64,
            .RtlpQueryProcessDebugInformationRemote,
            .RtlpRefreshCachedUILanguage,
            .RtlpSetInstallLanguage,
            .RtlpSetPreferredUILanguages,
            .RtlpSetUserPreferredUILanguages,
            .RtlpTimeFieldsToTime,
            .RtlpTimeToTimeFields,
            .RtlpUmsExecuteYieldThreadEnd,
            .RtlpUmsThreadYield,
            .RtlpUnWaitCriticalSection,
            .RtlpVerifyAndCommitUILanguageSettings,
            .RtlpWaitForCriticalSection,
            .RtlpWow64CtxFromAmd64,
            .RtlpWow64GetContextOnAmd64,
            .RtlpWow64SetContextOnAmd64,
            .RtlxAnsiStringToUnicodeSize,
            .RtlxOemStringToUnicodeSize,
            .RtlxUnicodeStringToAnsiSize,
            .RtlxUnicodeStringToOemSize,
            .SbExecuteProcedure,
            .SbSelectProcedure,
            .ShipAssert,
            .ShipAssertGetBufferInfo,
            .ShipAssertMsgA,
            .ShipAssertMsgW,
            .TpAllocAlpcCompletionEx,
            .TpAllocCleanupGroup,
            .TpAllocIoCompletion,
            .TpAllocJobNotification,
            .TpAllocPool,
            .TpAllocTimer,
            .TpAllocWait,
            .TpAllocWork,
            .TpAlpcRegisterCompletionList,
            .TpAlpcUnregisterCompletionList,
            .TpCallbackDetectedUnrecoverableError,
            .TpCallbackIndependent,
            .TpCallbackLeaveCriticalSectionOnCompletion,
            .TpCallbackMayRunLong,
            .TpCallbackReleaseMutexOnCompletion,
            .TpCallbackReleaseSemaphoreOnCompletion,
            .TpCallbackSendAlpcMessageOnCompletion,
            .TpCallbackSendPendingAlpcMessage,
            .TpCallbackSetEventOnCompletion,
            .TpCallbackUnloadDllOnCompletion,
            .TpCancelAsyncIoOperation,
            .TpCaptureCaller,
            .TpCheckTerminateWorker,
            .TpDbgDumpHeapUsage,
            .TpDbgSetLogRoutine,
            .TpDisablePoolCallbackChecks,
            .TpDisassociateCallback,
            .TpIsTimerSet,
            .TpPostWork,
            .TpQueryPoolStackInformation,
            .TpReleaseAlpcCompletion,
            .TpReleaseCleanupGroup,
            .TpReleaseCleanupGroupMembers,
            .TpReleaseIoCompletion,
            .TpReleaseJobNotification,
            .TpReleasePool,
            .TpReleaseTimer,
            .TpReleaseWait,
            .TpReleaseWork,
            .TpSetDefaultPoolMaxThreads,
            .TpSetDefaultPoolStackInformation,
            .TpSetPoolMaxThreads,
            .TpSetPoolMaxThreadsSoftLimit,
            .TpSetPoolMinThreads,
            .TpSetPoolStackInformation,
            .TpSetPoolThreadBasePriority,
            .TpSetPoolThreadCpuSets,
            .TpSetPoolWorkerThreadIdleTimeout,
            .TpSetTimer,
            .TpSetTimerEx,
            .TpSetWait,
            .TpSetWaitEx,
            .TpSimpleTryPost,
            .TpStartAsyncIoOperation,
            .TpTimerOutstandingCallbackCount,
            .TpTrimPools,
            .TpWaitForAlpcCompletion,
            .TpWaitForIoCompletion,
            .TpWaitForJobNotification,
            .TpWaitForTimer,
            .TpWaitForWait,
            .TpWaitForWork,
            .VerSetConditionMask,
            .WerReportExceptionWorker,
            .WerReportSQMEvent,
            .WinSqmAddToAverageDWORD,
            .WinSqmAddToStream,
            .WinSqmAddToStreamEx,
            .WinSqmCheckEscalationAddToStreamEx,
            .WinSqmCheckEscalationSetDWORD,
            .WinSqmCheckEscalationSetDWORD64,
            .WinSqmCheckEscalationSetString,
            .WinSqmCommonDatapointDelete,
            .WinSqmCommonDatapointSetDWORD,
            .WinSqmCommonDatapointSetDWORD64,
            .WinSqmCommonDatapointSetStreamEx,
            .WinSqmCommonDatapointSetString,
            .WinSqmEndSession,
            .WinSqmEventEnabled,
            .WinSqmEventWrite,
            .WinSqmGetEscalationRuleStatus,
            .WinSqmGetInstrumentationProperty,
            .WinSqmIncrementDWORD,
            .WinSqmIsOptedIn,
            .WinSqmIsOptedInEx,
            .WinSqmIsSessionDisabled,
            .WinSqmSetDWORD,
            .WinSqmSetDWORD64,
            .WinSqmSetEscalationInfo,
            .WinSqmSetIfMaxDWORD,
            .WinSqmSetIfMinDWORD,
            .WinSqmSetString,
            .WinSqmStartSession,
            .WinSqmStartSessionForPartner,
            .WinSqmStartSqmOptinListener,
            .longjmp,
            .vDbgPrintEx,
            .vDbgPrintExWithPrefix,
            .NtAcceptConnectPort,
            .NtAccessCheck,
            .NtAccessCheckAndAuditAlarm,
            .NtAccessCheckByType,
            .NtAccessCheckByTypeAndAuditAlarm,
            .NtAccessCheckByTypeResultList,
            .NtAccessCheckByTypeResultListAndAuditAlarm,
            .NtAccessCheckByTypeResultListAndAuditAlarmByHandle,
            .NtAcquireCrossVmMutant,
            .NtAcquireProcessActivityReference,
            .NtAddAtom,
            .NtAddAtomEx,
            .NtAddBootEntry,
            .NtAddDriverEntry,
            .NtAdjustGroupsToken,
            .NtAdjustPrivilegesToken,
            .NtAdjustTokenClaimsAndDeviceGroups,
            .NtAlertResumeThread,
            .NtAlertThread,
            .NtAlertThreadByThreadId,
            .NtAllocateLocallyUniqueId,
            .NtAllocateReserveObject,
            .NtAllocateUserPhysicalPages,
            .NtAllocateUserPhysicalPagesEx,
            .NtAllocateUuids,
            .NtAllocateVirtualMemoryEx,
            .NtAlpcAcceptConnectPort,
            .NtAlpcCancelMessage,
            .NtAlpcConnectPort,
            .NtAlpcConnectPortEx,
            .NtAlpcCreatePortSection,
            .NtAlpcCreateResourceReserve,
            .NtAlpcCreateSectionView,
            .NtAlpcCreateSecurityContext,
            .NtAlpcDeletePortSection,
            .NtAlpcDeleteResourceReserve,
            .NtAlpcDeleteSectionView,
            .NtAlpcDeleteSecurityContext,
            .NtAlpcDisconnectPort,
            .NtAlpcImpersonateClientContainerOfPort,
            .NtAlpcImpersonateClientOfPort,
            .NtAlpcOpenSenderProcess,
            .NtAlpcOpenSenderThread,
            .NtAlpcQueryInformation,
            .NtAlpcQueryInformationMessage,
            .NtAlpcRevokeSecurityContext,
            .NtAlpcSendWaitReceivePort,
            .NtAlpcSetInformation,
            .NtApphelpCacheControl,
            .NtAreMappedFilesTheSame,
            .NtAssignProcessToJobObject,
            .NtAssociateWaitCompletionPacket,
            .NtCallEnclave,
            .NtCallbackReturn,
            .NtCancelIoFile,
            .NtCancelIoFileEx,
            .NtCancelSynchronousIoFile,
            .NtCancelTimer,
            .NtCancelTimer2,
            .NtCancelWaitCompletionPacket,
            .NtClearEvent,
            .NtCloseObjectAuditAlarm,
            .NtCommitComplete,
            .NtCommitEnlistment,
            .NtCommitRegistryTransaction,
            .NtCommitTransaction,
            .NtCompactKeys,
            .NtCompareObjects,
            .NtCompareSigningLevels,
            .NtCompareTokens,
            .NtCompleteConnectPort,
            .NtCompressKey,
            .NtConnectPort,
            .NtContinue,
            .NtContinueEx,
            .NtConvertBetweenAuxiliaryCounterAndPerformanceCounter,
            .NtCreateCrossVmEvent,
            .NtCreateCrossVmMutant,
            .NtCreateDebugObject,
            .NtCreateDirectoryObjectEx,
            .NtCreateEnclave,
            .NtCreateEnlistment,
            .NtCreateEventPair,
            .NtCreateIRTimer,
            .NtCreateIoCompletion,
            .NtCreateJobObject,
            .NtCreateJobSet,
            .NtCreateKeyTransacted,
            .NtCreateKeyedEvent,
            .NtCreateLowBoxToken,
            .NtCreateMailslotFile,
            .NtCreateNamedPipeFile,
            .NtCreatePagingFile,
            .NtCreatePartition,
            .NtCreatePort,
            .NtCreatePrivateNamespace,
            .NtCreateProcess,
            .NtCreateProcessEx,
            .NtCreateProfile,
            .NtCreateProfileEx,
            .NtCreateRegistryTransaction,
            .NtCreateResourceManager,
            .NtCreateSectionEx,
            .NtCreateSemaphore,
            .NtCreateSymbolicLinkObject,
            .NtCreateThread,
            .NtCreateThreadEx,
            .NtCreateTimer,
            .NtCreateTimer2,
            .NtCreateToken,
            .NtCreateTokenEx,
            .NtCreateTransaction,
            .NtCreateTransactionManager,
            .NtCreateUserProcess,
            .NtCreateWaitCompletionPacket,
            .NtCreateWaitablePort,
            .NtCreateWnfStateName,
            .NtCreateWorkerFactory,
            .NtDebugActiveProcess,
            .NtDebugContinue,
            .NtDelayExecution,
            .NtDeleteAtom,
            .NtDeleteBootEntry,
            .NtDeleteDriverEntry,
            .NtDeleteFile,
            .NtDeleteKey,
            .NtDeleteObjectAuditAlarm,
            .NtDeletePrivateNamespace,
            .NtDeleteWnfStateData,
            .NtDeleteWnfStateName,
            .NtDeviceIoControlFile,
            .NtDirectGraphicsCall,
            .NtDisableLastKnownGood,
            .NtDisplayString,
            .NtDrawText,
            .NtDuplicateToken,
            .NtEnableLastKnownGood,
            .NtEnumerateBootEntries,
            .NtEnumerateDriverEntries,
            .NtEnumerateKey,
            .NtEnumerateSystemEnvironmentValuesEx,
            .NtEnumerateTransactionObject,
            .NtEnumerateValueKey,
            .NtExtendSection,
            .NtFilterBootOption,
            .NtFilterToken,
            .NtFilterTokenEx,
            .NtFindAtom,
            .NtFlushBuffersFile,
            .NtFlushBuffersFileEx,
            .NtFlushInstallUILanguage,
            .NtFlushInstructionCache,
            .NtFlushKey,
            .NtFlushProcessWriteBuffers,
            .NtFlushVirtualMemory,
            .NtFlushWriteBuffer,
            .NtFreeUserPhysicalPages,
            .NtFreeVirtualMemory,
            .NtFreezeRegistry,
            .NtFreezeTransactions,
            .NtFsControlFile,
            .NtGetCachedSigningLevel,
            .NtGetCompleteWnfStateSubscription,
            .NtGetContextThread,
            .NtGetCurrentProcessorNumber,
            .NtGetCurrentProcessorNumberEx,
            .NtGetDevicePowerState,
            .NtGetMUIRegistryInfo,
            .NtGetNextProcess,
            .NtGetNextThread,
            .NtGetNlsSectionPtr,
            .NtGetNotificationResourceManager,
            .NtGetWriteWatch,
            .NtImpersonateAnonymousToken,
            .NtImpersonateClientOfPort,
            .NtImpersonateThread,
            .NtInitializeEnclave,
            .NtInitializeNlsFiles,
            .NtInitializeRegistry,
            .NtInitiatePowerAction,
            .NtIsProcessInJob,
            .NtIsSystemResumeAutomatic,
            .NtIsUILanguageComitted,
            .NtListenPort,
            .NtLoadDriver,
            .NtLoadEnclaveData,
            .NtLoadKey,
            .NtLoadKey2,
            .NtLoadKey3,
            .NtLoadKeyEx,
            .NtLockFile,
            .NtLockProductActivationKeys,
            .NtLockRegistryKey,
            .NtLockVirtualMemory,
            .NtMakePermanentObject,
            .NtMakeTemporaryObject,
            .NtManageHotPatch,
            .NtManagePartition,
            .NtMapCMFModule,
            .NtMapUserPhysicalPages,
            .NtMapUserPhysicalPagesScatter,
            .NtMapViewOfSectionEx,
            .NtModifyBootEntry,
            .NtModifyDriverEntry,
            .NtNotifyChangeDirectoryFile,
            .NtNotifyChangeDirectoryFileEx,
            .NtNotifyChangeKey,
            .NtNotifyChangeMultipleKeys,
            .NtNotifyChangeSession,
            .NtOpenEnlistment,
            .NtOpenEventPair,
            .NtOpenIoCompletion,
            .NtOpenJobObject,
            .NtOpenKeyEx,
            .NtOpenKeyTransacted,
            .NtOpenKeyTransactedEx,
            .NtOpenKeyedEvent,
            .NtOpenMutant,
            .NtOpenObjectAuditAlarm,
            .NtOpenPartition,
            .NtOpenPrivateNamespace,
            .NtOpenProcess,
            .NtOpenProcessToken,
            .NtOpenProcessTokenEx,
            .NtOpenRegistryTransaction,
            .NtOpenResourceManager,
            .NtOpenSection,
            .NtOpenSemaphore,
            .NtOpenSession,
            .NtOpenThread,
            .NtOpenThreadToken,
            .NtOpenThreadTokenEx,
            .NtOpenTimer,
            .NtOpenTransaction,
            .NtOpenTransactionManager,
            .NtPlugPlayControl,
            .NtPowerInformation,
            .NtPrePrepareComplete,
            .NtPrePrepareEnlistment,
            .NtPrepareComplete,
            .NtPrepareEnlistment,
            .NtPrivilegeCheck,
            .NtPrivilegeObjectAuditAlarm,
            .NtPrivilegedServiceAuditAlarm,
            .NtPropagationComplete,
            .NtPropagationFailed,
            .NtProtectVirtualMemory,
            .NtPssCaptureVaSpaceBulk,
            .NtPulseEvent,
            .NtQueryAttributesFile,
            .NtQueryAuxiliaryCounterFrequency,
            .NtQueryBootEntryOrder,
            .NtQueryBootOptions,
            .NtQueryDebugFilterState,
            .NtQueryDefaultLocale,
            .NtQueryDefaultUILanguage,
            .NtQueryDirectoryFile,
            .NtQueryDirectoryFileEx,
            .NtQueryDriverEntryOrder,
            .NtQueryEaFile,
            .NtQueryEvent,
            .NtQueryFullAttributesFile,
            .NtQueryInformationAtom,
            .NtQueryInformationByName,
            .NtQueryInformationEnlistment,
            .NtQueryInformationFile,
            .NtQueryInformationPort,
            .NtQueryInformationProcess,
            .NtQueryInformationResourceManager,
            .NtQueryInformationThread,
            .NtQueryInformationToken,
            .NtQueryInformationTransaction,
            .NtQueryInformationTransactionManager,
            .NtQueryInformationWorkerFactory,
            .NtQueryInstallUILanguage,
            .NtQueryIntervalProfile,
            .NtQueryIoCompletion,
            .NtQueryKey,
            .NtQueryLicenseValue,
            .NtQueryMultipleValueKey,
            .NtQueryMutant,
            .NtQueryObject,
            .NtQueryOpenSubKeys,
            .NtQueryOpenSubKeysEx,
            .NtQueryPerformanceCounter,
            .NtQueryPortInformationProcess,
            .NtQueryQuotaInformationFile,
            .NtQuerySection,
            .NtQuerySecurityAttributesToken,
            .NtQuerySecurityObject,
            .NtQuerySecurityPolicy,
            .NtQuerySemaphore,
            .NtQuerySystemEnvironmentValue,
            .NtQuerySystemEnvironmentValueEx,
            .NtQuerySystemInformationEx,
            .NtQuerySystemTime,
            .NtQueryTimer,
            .NtQueryTimerResolution,
            .NtQueryVirtualMemory,
            .NtQueryVolumeInformationFile,
            .NtQueryWnfStateData,
            .NtQueryWnfStateNameInformation,
            .NtQueueApcThread,
            .NtQueueApcThreadEx,
            .NtRaiseException,
            .NtReadFile,
            .NtReadFileScatter,
            .NtReadOnlyEnlistment,
            .NtReadRequestData,
            .NtReadVirtualMemory,
            .NtRecoverEnlistment,
            .NtRecoverResourceManager,
            .NtRecoverTransactionManager,
            .NtRegisterProtocolAddressInformation,
            .NtRegisterThreadTerminatePort,
            .NtReleaseKeyedEvent,
            .NtReleaseMutant,
            .NtReleaseSemaphore,
            .NtReleaseWorkerFactoryWorker,
            .NtRemoveIoCompletion,
            .NtRemoveIoCompletionEx,
            .NtRemoveProcessDebug,
            .NtRenameKey,
            .NtRenameTransactionManager,
            .NtReplaceKey,
            .NtReplacePartitionUnit,
            .NtReplyPort,
            .NtReplyWaitReceivePort,
            .NtReplyWaitReceivePortEx,
            .NtReplyWaitReplyPort,
            .NtRequestPort,
            .NtRequestWaitReplyPort,
            .NtResetEvent,
            .NtResetWriteWatch,
            .NtRestoreKey,
            .NtResumeProcess,
            .NtResumeThread,
            .NtRevertContainerImpersonation,
            .NtRollbackComplete,
            .NtRollbackEnlistment,
            .NtRollbackRegistryTransaction,
            .NtRollbackTransaction,
            .NtRollforwardTransactionManager,
            .NtSaveKey,
            .NtSaveKeyEx,
            .NtSaveMergedKeys,
            .NtSecureConnectPort,
            .NtSerializeBoot,
            .NtSetBootEntryOrder,
            .NtSetBootOptions,
            .NtSetCachedSigningLevel,
            .NtSetCachedSigningLevel2,
            .NtSetContextThread,
            .NtSetDebugFilterState,
            .NtSetDefaultHardErrorPort,
            .NtSetDefaultLocale,
            .NtSetDefaultUILanguage,
            .NtSetDriverEntryOrder,
            .NtSetEaFile,
            .NtSetEvent,
            .NtSetEventBoostPriority,
            .NtSetHighEventPair,
            .NtSetHighWaitLowEventPair,
            .NtSetIRTimer,
            .NtSetInformationDebugObject,
            .NtSetInformationEnlistment,
            .NtSetInformationFile,
            .NtSetInformationJobObject,
            .NtSetInformationKey,
            .NtSetInformationObject,
            .NtSetInformationResourceManager,
            .NtSetInformationSymbolicLink,
            .NtSetInformationThread,
            .NtSetInformationToken,
            .NtSetInformationTransaction,
            .NtSetInformationTransactionManager,
            .NtSetInformationVirtualMemory,
            .NtSetInformationWorkerFactory,
            .NtSetIntervalProfile,
            .NtSetIoCompletion,
            .NtSetIoCompletionEx,
            .NtSetLdtEntries,
            .NtSetLowEventPair,
            .NtSetLowWaitHighEventPair,
            .NtSetQuotaInformationFile,
            .NtSetSecurityObject,
            .NtSetSystemEnvironmentValue,
            .NtSetSystemEnvironmentValueEx,
            .NtSetSystemInformation,
            .NtSetSystemPowerState,
            .NtSetSystemTime,
            .NtSetThreadExecutionState,
            .NtSetTimer,
            .NtSetTimer2,
            .NtSetTimerEx,
            .NtSetTimerResolution,
            .NtSetUuidSeed,
            .NtSetVolumeInformationFile,
            .NtSetWnfProcessNotificationEvent,
            .NtShutdownSystem,
            .NtShutdownWorkerFactory,
            .NtSignalAndWaitForSingleObject,
            .NtSinglePhaseReject,
            .NtStartProfile,
            .NtStopProfile,
            .NtSubscribeWnfStateChange,
            .NtSuspendProcess,
            .NtSuspendThread,
            .NtSystemDebugControl,
            .NtTerminateEnclave,
            .NtTerminateJobObject,
            .NtTerminateThread,
            .NtTestAlert,
            .NtThawRegistry,
            .NtThawTransactions,
            .NtTraceControl,
            .NtTraceEvent,
            .NtTranslateFilePath,
            .NtUmsThreadYield,
            .NtUnloadDriver,
            .NtUnloadKey,
            .NtUnloadKey2,
            .NtUnloadKeyEx,
            .NtUnlockFile,
            .NtUnlockVirtualMemory,
            .NtUnmapViewOfSectionEx,
            .NtUnsubscribeWnfStateChange,
            .NtUpdateWnfStateData,
            .NtVdmControl,
            .NtWaitForAlertByThreadId,
            .NtWaitForDebugEvent,
            .NtWaitForKeyedEvent,
            .NtWaitForMultipleObjects,
            .NtWaitForMultipleObjects32,
            .NtWaitForSingleObject,
            .NtWaitForWorkViaWorkerFactory,
            .NtWaitHighEventPair,
            .NtWaitLowEventPair,
            .NtWorkerFactoryWorkerReady,
            .NtWriteFile,
            .NtWriteFileGather,
            .NtWriteRequestData,
            .NtWriteVirtualMemory,
            .NtYieldExecution,

            .RtlGetVersion,

            .TpAllocTimer,
            .TpSetTimer,
            .EtwEventWrite, // Nt calls
            .EtwEventEnabled, // Nt calls
            .RtlQueryRegistryValuesEx,

            .RtlSetEnvironmentVariable,
            .RtlQueryEnvironmentVariable_U,
            .RtlDosSearchPath_U,
            .RtlInterlockedSetBitRun,
            .RtlCreateProcessParametersEx,
        },

        .success_stubs = .{
            .RtlDeleteRegistryValue,
            .RtlSetCurrentEnvironment,
        },
    },
};

comptime {
    // Verify symbols don't have duplicates
    for (@typeInfo(@TypeOf(symbols)).Struct.fields) |dll_field| {
        const dll_name = dll_field.name;
        const dll_value = @field(symbols, dll_name);
        var dll_symbols: []const []const u8 = &[_][]const u8{};

        @setEvalBranchQuota(5 * @typeInfo(@TypeOf(dll_value.hooks)).Struct.fields.len);
        for (@typeInfo(@TypeOf(dll_value.hooks)).Struct.fields) |hook_field| {
            dll_symbols = dll_symbols ++ &[1][]const u8{hook_field.name};
        }

        @setEvalBranchQuota(5 * dll_value.real.len);
        for (dll_value.real) |real_symbol| {
            dll_symbols = dll_symbols ++ &[1][]const u8{@tagName(real_symbol)};
        }

        @setEvalBranchQuota(5 * dll_value.kill.len);
        for (dll_value.kill) |kill_symbol| {
            dll_symbols = dll_symbols ++ &[1][]const u8{@tagName(kill_symbol)};
        }

        @setEvalBranchQuota(5 * dll_value.success_stubs.len);
        for (dll_value.success_stubs) |success_symbol| {
            dll_symbols = dll_symbols ++ &[1][]const u8{@tagName(success_symbol)};
        }

        @setEvalBranchQuota(1000 * dll_symbols.len);
        var sorted_symbols = dll_symbols[0..dll_symbols.len].*;
        std.sort.pdq([]const u8, &sorted_symbols, {}, struct {
            fn f(_: void, lhs: []const u8, rhs: []const u8) bool {
                return std.mem.lessThan(u8, lhs, rhs);
            }
        }.f);

        @setEvalBranchQuota(10 * dll_symbols.len);
        for (dll_symbols, 0..) |first_sym, i| {
            if (i + 1 < dll_symbols.len) {
                const second_sym = dll_symbols[i + 1];
                if (std.mem.eql(u8, first_sym, second_sym)) {
                    @compileError(std.fmt.comptimePrint("Symbol for {s} found at least twice: {s}", .{ dll_name, first_sym }));
                }
            }
        }
    }
}

fn RealAddrHolder(comptime symname: []const u8) type {
    _ = symname;
    return struct {
        var value: ?*const anyopaque = null;
    };
}

fn KillStub(comptime symname: []const u8) type {
    return struct {
        fn f() callconv(.Win64) ntdll.NTSTATUS {
            @panic("Reached kill function " ++ symname);
        }
    };
}

fn SuccessStub(comptime symname: []const u8) type {
    return struct {
        fn f() callconv(.Win64) ntdll.NTSTATUS {
            log("WARNING: STUB: " ++ symname, .{});
            return .SUCCESS;
        }
    };
}

pub const ResolveContext = struct {
    const ResolveResult = union(enum) {
        unknown_dll,
        dll_known_symbol_unknown,
        hook: *const anyopaque,
        real: *?*const anyopaque,
    };

    fn findEntry(self: *@This(), dll_name: []const u8, symbol_name: []const u8) ResolveResult {
        _ = self;
        inline for (@typeInfo(@TypeOf(symbols)).Struct.fields) |dll_field| {
            if (std.mem.eql(u8, dll_name, dll_field.name)) {
                const dll_value = @field(symbols, dll_field.name);

                @setEvalBranchQuota(5 * @typeInfo(@TypeOf(dll_value.hooks)).Struct.fields.len);
                inline for (@typeInfo(@TypeOf(dll_value.hooks)).Struct.fields) |hook_field| {
                    if (std.mem.eql(u8, hook_field.name, symbol_name)) {
                        return .{ .hook = @field(dll_value.hooks, hook_field.name) };
                    }
                }

                @setEvalBranchQuota(5 * dll_value.real.len);
                inline for (dll_value.real) |real_sym| {
                    if (std.mem.eql(u8, @tagName(real_sym), symbol_name)) {
                        return .{ .real = &RealAddrHolder(@tagName(real_sym)).value };
                    }
                }

                @setEvalBranchQuota(5 * dll_value.kill.len);
                inline for (dll_value.kill) |kill_sym| {
                    if (std.mem.eql(u8, @tagName(kill_sym), symbol_name)) {
                        return .{ .hook = @as(*const anyopaque, @ptrCast(&KillStub(@tagName(kill_sym)).f)) };
                    }
                }

                @setEvalBranchQuota(5 * dll_value.success_stubs.len);
                inline for (dll_value.success_stubs) |stub_sym| {
                    if (std.mem.eql(u8, @tagName(stub_sym), symbol_name)) {
                        return .{ .hook = @as(*const anyopaque, @ptrCast(&SuccessStub(@tagName(stub_sym)).f)) };
                    }
                }

                return .{ .dll_known_symbol_unknown = {} };
            }
        }

        return .{ .unknown_dll = {} };
    }

    pub fn resolve(self: *@This(), dll_name: []const u8, symbol_name: []const u8) ?*const anyopaque {
        const entry = self.findEntry(dll_name, symbol_name);
        return switch (entry) {
            .unknown_dll, .dll_known_symbol_unknown => null,
            .hook => |h| h,
            .real => |r| r.*,
        };
    }

    pub fn provide(self: *@This(), dll_name: []const u8, symbol_name: []const u8, addr: *anyopaque) void {
        const entry = self.findEntry(dll_name, symbol_name);
        return switch (entry) {
            .unknown_dll => @panic("Unknown dll, TODO runtime resolving"),
            .dll_known_symbol_unknown => {
                //log("WARNING: Unknown symbol for dll {s}: {s}", .{dll_name, symbol_name});
            },
            .hook => |hook_target| {
                const delta = @intFromPtr(hook_target) -% (@intFromPtr(addr) + 5);
                if (delta < 0x80000000 or delta >= 0xFFFFFFFF80000000) {
                    var instr_bytes: [5]u8 = undefined;
                    instr_bytes[0] = 0xE9; // jmp imm32
                    std.mem.writeInt(u32, instr_bytes[1..], @truncate(delta), .little);
                    @memcpy(@as([*]u8, @ptrCast(addr))[0..instr_bytes.len], &instr_bytes);
                } else if (@intFromPtr(hook_target) < 0x100000000) {
                    var instr_bytes: [6]u8 = undefined;
                    instr_bytes[0] = 0x68; // push imm32
                    std.mem.writeInt(u32, instr_bytes[1..5], @truncate(@intFromPtr(hook_target)), .little);
                    instr_bytes[5] = 0xC3; // ret
                    @memcpy(@as([*]u8, @ptrCast(addr))[0..instr_bytes.len], &instr_bytes);
                } else {
                    var instr_bytes: [12]u8 = undefined;
                    @memcpy(&instr_bytes, "\x48\xB8XXXXXXXX\xFF\xE0"); // movabs rax, hook_target; jmp rax
                    std.mem.writeInt(u64, instr_bytes[2..10], @intFromPtr(hook_target), .little);
                    @memcpy(@as([*]u8, @ptrCast(addr))[0..instr_bytes.len], &instr_bytes);
                }
            },
            .real => |real_target| {
                real_target.* = addr;
            },
        };
    }
};

const std = @import("std");
const log = @import("log.zig").scoped(.ntdll);

const WrappedFunction = struct {
    hooked: ?bool,
    fptr: *const anyopaque,
};

const RealFunction = struct {
    fptr: ?*const anyopaque = null,
};

fn wrapped(fptr: anytype, hook: bool) WrappedFunction {
    const f = @typeInfo(@TypeOf(fptr.*)).Fn;
    std.debug.assert(f.calling_convention == .Win64);
    return .{
        .hooked = if (hook) false else null,
        .fptr = @as(*const anyopaque, @ptrCast(f)),
    };
}

const ntdll = @import("ntdll.zig");

fn stub(comptime str: []const u8) *const anyopaque {
    return @as(*const anyopaque, @ptrCast(struct {
        fn f() callconv(.Win64) ntdll.NTSTATUS {
            log("Undefined, stub: " ++ str, .{});
            return .SUCCESS;
        }
    }.f));
}
